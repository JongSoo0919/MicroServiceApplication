server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      routes:
          - id: application-user-service
            uri: lb://APPLICATION-USER-SERVICE
            predicates:
              - Path=/user-service/login
              - Method=POST
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
          - id: application-user-service
            uri: lb://APPLICATION-USER-SERVICE
            predicates:
              - Path=/user-service/users
              - Method=POST
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
          - id: application-user-service
            uri: lb://APPLICATION-USER-SERVICE
            predicates:
              - Path=/user-service/**
              - Method=GET
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
              - AuthorizationHeaderFilter
          - id: application-user-service
            uri: lb://APPLICATION-USER-SERVICE
            predicates:
              #401 Error 잡아야함
              - Path=/user-service/actuator/**
              - Method=GET,POST
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
          - id: application-catalogue-service
            uri: lb://APPLICATION-CATALOGUE-SERVICE
            predicates:
              - Path=/catalogue-service/**
          - id: application-order-service
            uri: lb://APPLICATION-ORDER-SERVICE
            predicates:
              - Path=/order-service/**
          - id : first-service
            uri : lb://GATEWAY-FIRST-SERVICE
            predicates:
             - Path=/first-service/**
            filters:
#              - AddRequestHeader=first-request, first-requests-header2
#              - AddResponseHeader=first-response, first-response-header2
              - CustomFilter
          - id : second-service
            uri: lb://GATEWAY-SECOND-SERVICE
            predicates:
              - Path=/second-service/**
            filters:
#              - AddRequestHeader=second-request, second-requests-header2
#              - AddResponseHeader=second-response, second-response-header2
              - name : CustomFilter
              - name : LoggingFilter
                args:
                  baseMessage: Hi, LoggingFilter
                  preLogger: true
                  postLogger: true
      default-filters:
        - name : GlobalFilter
          args :
            baseMessage : Spring Cloud Gateway Global Filter
            preLogger : true
            postLogger : true

token:
  secret: 83f01c82ca0e459e653e9741067bccb04cb94bd3049e68b00cb6513c2d3cf957

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace